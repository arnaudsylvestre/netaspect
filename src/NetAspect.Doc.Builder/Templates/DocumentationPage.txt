#set( $H = '#' )
$page.SetParameterDescription('instance', 'the current instance of the member')

<div class="container bs-docs-container">
      <div class="row">
		<div class="col-md-12" role="main">

		
	<div class="bs-docs-section">
		 
            <div class="page-header">
               <h1 id="kinds">Put aspects</h1>
            </div>
            <p>In NetAspect, aspects can be put on fields/properties/methods/constructors. There is 2 ways to put an aspect on a member :</p>

			<div class="list-group">
  <a href="#AttributesSample" data-toggle="collapse"  class="list-group-item">
    <h4 class="list-group-item-heading">By attributes</h4>
    <p class="list-group-item-text">Just consider the aspect as an attribute and put the attribute on the member.</p>
  </a>
  <div id="AttributesSample" class="panel-collapse collapse">
								<div class="panel-body">
								<pre class="prettyprint">
// The aspect
$page.Weaving.WeaveWithAttributeSampleAspect

// The class to weave
$page.Weaving.WeaveWithAttributeSampleClassToWeave
</pre>
								</div>
								</div>
    <a href="#SelectSample" data-toggle="collapse" class="list-group-item">
    <h4 class="list-group-item-heading">By selecting the member</h4>
    <p class="list-group-item-text">If you can't add an attribute to your member to weave, you can just declare a <b>select</b> method in your aspect.</p>
  </a>
    <div id="SelectSample" class="panel-collapse collapse">
								<div class="panel-body">
								<pre class="prettyprint">
// The aspect
$page.Weaving.WeaveWithSelectSampleAspect

// The class to weave
$page.Weaving.WeaveWithSelectSampleClassToWeave
</pre>
								</div>
								</div>
</div>

			
         </div



			<div class="bs-docs-section">
				<div class="page-header">
					<h1 id="dropdowns">Interceptors</h1>
				</div>
				<p>An interceptor is a <b>method</b> declared in the <b>aspect</b> and which will be called at certain moment after the weaving.<br/>Some <b>parameters</b> can be added to the interceptor to get more information</p>
				<p>The following interceptors are available :</p>
#foreach ($member in $page.Members)
				<h2 class="list-group-item-heading">For an aspect put on a $member</h2>
				
#foreach ($interceptor in $page.GetInterceptors($member))


				<div id="${interceptor.Name}InterceptorCollapsible" >
			
			
			<div class="list-group">
			  <a data-toggle="collapse" href="$H${interceptor.Name}Coll" class="list-group-item list-group-item-info">
				<h4 class="list-group-item-heading ">The $interceptor.Name interceptor</h4>
#if ($interceptor.Kind == 'Method')
#if ($interceptor.Event == 'Before')
				<p class="list-group-item-text">This interceptor is executed before the code of the $member is executed</p>
#elseif ($interceptor.Event == 'After')
				<p class="list-group-item-text">This interceptor is executed after the code of the $member is executed</p>
#elseif ($interceptor.Event == 'OnException')
				<p class="list-group-item-text">This interceptor is executed when an exception is raised by the $member</p>
#elseif ($interceptor.Event == 'OnFinally')
				<p class="list-group-item-text">This interceptor is executed after the code of the $member is executed if an exception is raised or not</p>
#end
#elseif ($interceptor.Kind == 'Call')
#if ($interceptor.Event == 'Before')
				<p class="list-group-item-text">This interceptor is executed before calling the $member</p>
#elseif ($interceptor.Event == 'After')
				<p class="list-group-item-text">This interceptor is executed after calling the $member</p>
#end
#elseif ($interceptor.Kind == 'Parameter')
#if ($interceptor.Event == 'Before')
				<p class="list-group-item-text">This interceptor is executed before the code of the method is executed</p>
#elseif ($interceptor.Event == 'After')
				<p class="list-group-item-text">This interceptor is executed after the code of the method is executed</p>
#elseif ($interceptor.Event == 'OnException')
				<p class="list-group-item-text">This interceptor is executed when an exception is raised by the method</p>
#elseif ($interceptor.Event == 'OnFinally')
				<p class="list-group-item-text">This interceptor is executed after the code of the method is executed if an exception is raised or not</p>
#end
#end
				
							
							
			  </a>
			  <div id="${interceptor.Name}Coll" class="panel-collapse collapse">
								<div class="panel-body">
								<p>The $interceptor.Name method is a $interceptor.Kind interceptor. The following parameters are available :</p>
			<ul>
#foreach ($parameter in $interceptor.Parameters)
               <li>$parameter</li>
#end
            </ul>
								<p>Here is a sample on how to use</p>
								<p>Imagine the following class :</p>
									<pre class="prettyprint">
$interceptor.ClassToWeaveCode
</pre>
								<p>We can create the following aspect :</p>
									<pre class="prettyprint">
$interceptor.AspectCode
</pre>
<p>Then the following code will work :</p>
									<pre class="prettyprint">
$interceptor.CallCode
</pre>
								</div>
			</div>

					
#end
			<br/>
#end
        
					</div>


				</div>
			</div>

			
		
		<div class="bs-docs-section">
		 
            <div class="page-header">
               <h1 id="parameters">Available parameters</h1>
            </div>
			




<div class="list-group">

#foreach ($parameter in $page.Parameters)
  <a href="#parameterId$velocityCount" data-toggle="collapse"  class="list-group-item">
    <h4 class="list-group-item-heading">$parameter.Name</h4>
    <p class="list-group-item-text">$page.GetParameterDescription($parameter.Name)</p>
  </a>
  <div id="parameterId$velocityCount" class="panel-collapse collapse">
								<div class="panel-body">
								<p>Here are some samples on how to use it</p>
#foreach ($sample in $parameter.Samples)
								<pre class="prettyprint">
// The aspect
$sample.AspectCode

// The class to weave
$sample.ClassToWeaveCode
</pre>
#end
								</div>
								</div>
#end
</div>




















<div class="alert alert-warning" role="alert">The following parameters are <b>not</b> available for each interceptor.</div>
			<ul>
#foreach ($parameter in $page.Parameters)
               <li><b>$parameter.Name</b> : $page.GetParameterDescription($parameter.Name)</li>
			   
#end
            </ul>
            
         </div>


		</div>
	</div>
</div>
